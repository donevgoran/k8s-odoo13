apiVersion: v1
data:
  PASSWORD: cGFzc3dvcmQxIQ==
  POSTGRES_PASSWORD: cGFzc3dvcmQxIQ==
kind: Secret
metadata:
  creationTimestamp: null
  name: odoo
---
apiVersion: v1
data:
  odoo.conf: "[options]\naddons_path = /mnt/extra-addons\ndata_dir = /var/lib/odoo\nadmin_passwd
    = password1!\n; csv_internal_sep = ,\n; db_maxconn = 64\n; db_name = False\n;
    db_template = template1\n; dbfilter = .*\n; debug_mode = False\n; email_from =
    False\n; limit_memory_hard = 2684354560\n; limit_memory_soft = 2147483648\n; limit_request
    = 8192\n; limit_time_cpu = 60\n; limit_time_real = 120\n; list_db = True\n; log_db
    = False\n; log_handler = [':INFO']\n; log_level = info\n; logfile = None\n; longpolling_port
    = 8072\n; max_cron_threads = 2\n; osv_memory_age_limit = 1.0\n; osv_memory_count_limit
    = False\n; smtp_password = False\n; smtp_port = 25\n; smtp_server = localhost\n;
    smtp_ssl = False\n; smtp_user = False\n; workers = 0\n; xmlrpc = True\n; xmlrpc_interface
    = \n; xmlrpc_port = 8069\n; xmlrpcs = True\n; xmlrpcs_interface = \n; xmlrpcs_port
    = 8071\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: odoo-conf
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgsql-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/k8s-data/pgsql-db"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgsql-pv-claim
  labels:
    app: pgsql-db
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: db
    environment: backend
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
      environment: backend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: db
        environment: backend
    spec:
      containers:
      - image: postgres:latest
        name: postgres
        env:
        - name: POSTGRES_USER
          value: odoo
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: odoo
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: postgres
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1"
        volumeMounts:
        - name: pgsql-persistent-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pgsql-persistent-storage
        persistentVolumeClaim:
          claimName: pgsql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
    environment: backend
spec:
  ports:
    - port: 5432
  selector:
    app: db
    environment: backend
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: odoo-pv-volume
  labels:
    app: odoo-app
    type: local
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/k8s-data/odoo-app"
---
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: odoo-addons-pv-volume
  labels:
    app: odoo-addons
    type: local
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/k8s-data/odoo-addons"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: odoo-addons-pv-claim
  labels:
    app: odoo-addons
spec:
  selector:
    matchLabels:
      app: odoo-addons
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: odoo-pv-claim
  labels:
    app: odoo-app
spec:
  selector:
    matchLabels:
      app: odoo-app
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: odoo-app
  name: odoo-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8069
  selector:
    app: odoo
    environment: frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: odoo
    environment: frontend
  name: odoo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odoo
      environment: frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: odoo
        environment: frontend
    spec:
      containers:
      - image: donevgoran/odoo13:latest
        name: odoo
        imagePullPolicy: "Always"
        env:
        - name: HOST
          value: db
        - name: PORT
          value: "5432"
        - name: USER
          value: odoo
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: odoo
              key: PASSWORD
        readinessProbe:
          tcpSocket:
            port: 8069
          initialDelaySeconds: 10
          periodSeconds: 60
        livenessProbe:
          httpGet:
            path: /
            port: 8069
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        ports:
          - containerPort: 8069
        volumeMounts:
        - name: odoo-persistent-storage
          mountPath: /var/lib/odoo
        - name: odoo-addons-persistent-storage
          mountPath: /mnt/extra-addons
        - name: odoo-config-cm
          mountPath: /etc/odoo
      volumes:
      - name: odoo-persistent-storage
        persistentVolumeClaim:
          claimName: odoo-pv-claim
      - name: odoo-addons-persistent-storage
        persistentVolumeClaim:
          claimName: odoo-addons-pv-claim
      - name: odoo-config-cm
        configMap:
          name: odoo-conf
